let b:workspace = {'ausmedals': {'class': "list", 'items': {'data': {'class': "data.frame", 'items': {'Year': {'class': "numeric"}, 'City': {'class': "character"}, 'Discipline': {'class': "character"}, 'Event': {'class': "character"}, 'Medal': {'class': "character"}, }}, 'table': {'class': "data.frame", 'items': {'Year': {'class': "character"}, 'City': {'class': "character"}, 'Discipline': {'class': "character"}, 'Event': {'class': "character"}, 'Medal': {'class': "character"}, }}, 'tex': {'class': "character"}, }}, 'cmm': {'class': "list", 'items': {'medals': {'class': "numeric"}, 'country': {'class': "character"}, 'prop': {'class': "numeric"}, 'propF': {'class': "character"}, 'row1': {'class': "character"}, 'rank': {'class': "numeric"}, 'include': {'class': "numeric"}, 'table': {'class': "character"}, 'tex': {'class': "character"}, }}, 'fit': {'class': "list", 'items': {'m': {'class': "list", 'items': {'resid': {'class': "function"}, 'fitted': {'class': "function"}, 'formula': {'class': "function"}, 'deviance': {'class': "function"}, 'lhs': {'class': "function"}, 'gradient': {'class': "function"}, 'conv': {'class': "function"}, 'incr': {'class': "function"}, 'setVarying': {'class': "function"}, 'setPars': {'class': "function"}, 'getPars': {'class': "function"}, 'getAllPars': {'class': "function"}, 'getEnv': {'class': "function"}, 'trace': {'class': "function"}, 'Rmat': {'class': "function"}, 'predict': {'class': "function"}, }}, 'convInfo': {'class': "list", 'items': {'isConv': {'class': "logical"}, 'finIter': {'class': "numeric"}, 'finTol': {'class': "numeric"}, 'stopCode': {'class': "numeric"}, 'stopMessage': {'class': "character"}, }}, 'data': {'class': "other"}, 'call': {'class': "other"}, 'dataClasses': {'class': "character"}, 'control': {'class': "list", 'items': {'maxiter': {'class': "numeric"}, 'tol': {'class': "numeric"}, 'minFactor': {'class': "numeric"}, 'printEval': {'class': "logical"}, 'warnOnly': {'class': "logical"}, }}, }}, 'icehockey': {'class': "data.frame", 'items': {'Year': {'class': "numeric"}, 'City': {'class': "character"}, 'Sport': {'class': "character"}, 'Discipline': {'class': "character"}, 'NOC': {'class': "character"}, 'Event': {'class': "character"}, 'Event.gender': {'class': "character"}, 'Medal': {'class': "character"}, }}, 'icehockeyf': {'class': "data.frame", 'items': {'Year': {'class': "numeric"}, 'City': {'class': "character"}, 'Sport': {'class': "character"}, 'Discipline': {'class': "character"}, 'NOC': {'class': "character"}, 'Event': {'class': "character"}, 'Event.gender': {'class': "character"}, 'Medal': {'class': "character"}, }}, 'icehockeygs': {'class': "data.frame", 'items': {'Year': {'class': "numeric"}, 'Medal': {'class': "character"}, 'NOC': {'class': "character"}, }}, 'icehockeygsw': {'class': "data.frame", 'items': {'Year': {'class': "numeric"}, 'NOC.Gold': {'class': "character"}, 'NOC.Silver': {'class': "character"}, }}, 'icetab': {'class': "list", 'items': {'data': {'class': "data.frame", 'items': {'Year': {'class': "numeric"}, 'Gold': {'class': "character"}, 'Silver': {'class': "character"}, }}, 'table': {'class': "data.frame", 'items': {'Year': {'class': "character"}, 'Gold': {'class': "character"}, 'Silver': {'class': "character"}, }}, 'tex': {'class': "character"}, }}, 'medals': {'class': "data.frame", 'items': {'Year': {'class': "numeric"}, 'City': {'class': "character"}, 'Sport': {'class': "character"}, 'Discipline': {'class': "character"}, 'NOC': {'class': "character"}, 'Event': {'class': "character"}, 'Event.gender': {'class': "character"}, 'Medal': {'class': "character"}, }}, 'x': {'class': "character"}, }
let b:list_order = {'-ausmedals': ["data", "table", "tex"], '-ausmedals-data': ["Year", "City", "Discipline", "Event", "Medal"], '-ausmedals-table': ["Year", "City", "Discipline", "Event", "Medal"], '-cmm': ["medals", "country", "prop", "propF", "row1", "rank", "include", "table", "tex"], '-fit': ["m", "convInfo", "data", "call", "dataClasses", "control"], '-fit-m': ["resid", "fitted", "formula", "deviance", "lhs", "gradient", "conv", "incr", "setVarying", "setPars", "getPars", "getAllPars", "getEnv", "trace", "Rmat", "predict"], '-fit-convInfo': ["isConv", "finIter", "finTol", "stopCode", "stopMessage"], '-fit-control': ["maxiter", "tol", "minFactor", "printEval", "warnOnly"], '-icehockey': ["Year", "City", "Sport", "Discipline", "NOC", "Event", "Event.gender", "Medal"], '-icehockeyf': ["Year", "City", "Sport", "Discipline", "NOC", "Event", "Event.gender", "Medal"], '-icehockeygs': ["Year", "Medal", "NOC"], '-icehockeygsw': ["Year", "NOC.Gold", "NOC.Silver"], '-icetab': ["data", "table", "tex"], '-icetab-data': ["Year", "Gold", "Silver"], '-icetab-table': ["Year", "Gold", "Silver"], '-medals': ["Year", "City", "Sport", "Discipline", "NOC", "Event", "Event.gender", "Medal"]}
let b:liblist = ['stats', 'graphics', 'grDevices', 'utils', 'datasets', 'methods', 'base']
